---
export const prerender = true

import Layout from '@layouts/Layout.astro';
import { GET as GET_ANIMALS } from '../api/animals.ts';
import { refreshAuthToken } from '../api/oauth-token.ts';

import { Icon } from 'astro-icon/components';

interface Photo {
  small: string;
  medium: string;
  large: string;
  full: string;
}

interface Video {
  embed: string;
}

interface SCSRAnimal {
  id: number;
  organization_id: 'SC92';
  url: string;
  type: 'Dog';
  species: 'Dog';
  breeds: {};
  colors: {}
  age: string;
  gender: string;
  size: string;
  coat: string;
  name: string;
  description: string;
  photos: Photo[];
  videos: Video[];
  status: string;
  attributes: Record<'spayed_neutered' | 'house_trained' | 'declawed' | 'special_needs' | 'shots_current', boolean>;
  environment: Record<'children' | 'dogs' | 'cats', boolean>;
  tags: string[];
  contact: {};
  published_at: string;
  distance: number;
  _links: {};
}

interface Pagination {
  count_per_page: number;
  total_count: number;
  current_page: number;
  total_pages: number;
  _links: {};
}

interface SCSRAnimals {
  animals: SCSRAnimal[];
  pagination: Pagination;
}

interface PetUIContextOption {
  text: string;
  icon?: boolean;
  order: number;
}

interface PetUIContextPhoto {
  first: boolean;
  src: string;
  alt: string;
}

interface PetUIContext {
  options: PetUIContextOption[];
  photos: PetUIContextPhoto[];
  name: string;
  sex: string;
  petfinderUrl: string;
}
interface PetsUIContext {
  pets: PetUIContext[];
}

let context: PetsUIContext = { pets: [] };
let isGetAnimalsError = false;

try {
  console.log('ADOPTABLE DOGS GET cookie: ',  Astro.cookies.get('petfinder-access-token'));
  console.log('ADOPTABLE DOGS HAS cookie: ',  Astro.cookies.has('petfinder-access-token'));

  await refreshAuthToken(Astro);

  console.log('ADOPTABLE DOGS TEST accessToken FINAL: ', Astro.cookies.get('petfinder-access-token'));

  let response = await GET_ANIMALS(Astro);
  const data = await response.json() as SCSRAnimals;
  const pets = data.animals;
  console.log('pets ', pets)
  pets.forEach(function(pet) {
    context.pets.push(formatPet(pet));
  });
  console.log('context ', context)
} catch (error) {
  console.error('Error making data request:', error);
  isGetAnimalsError = true;
}

function formatPet(pet: SCSRAnimal): PetUIContext {
  var petContext = { 
    options: [] as PetUIContext['options']
  } as PetUIContext;
  var name = pet.name;
  var sex = pet.gender;
  var options = pet.attributes;
  var environment = pet.environment;
  var isFirst = true;
  var optListItem;

  // @ts-ignore
  Object.keys(options).forEach(function(option: keyof SCSRAnimal['attributes']) {
    optListItem = formatOptionListItem(
      option,
      options[option],
      sex
    );
    if (optListItem && optListItem.text) {
      petContext.options.push(optListItem);
    }
  });
  // @ts-ignore
  Object.keys(environment).forEach(function(option: keyof SCSRAnimal['environment']) {
    optListItem = formatOptionListItem(option, environment[option], sex);
    if (optListItem && optListItem.text) {
      petContext.options.push(optListItem);
    }
  });
  petContext.options.sort(function(a, b) {
    return (a.order > b.order) ? 1 : -1;
  });

  petContext.photos = [];
  if (pet.photos) {
    pet.photos.forEach(function(photo, idx) {
      if (photo.large) {
        petContext.photos.push({
          first: isFirst,
          src: photo.large,
          alt: name + idx
        });
        isFirst = false;
      }
    });
  }

  petContext.name = name;
  petContext.sex = sex;
  petContext.petfinderUrl = pet.url;

  return petContext;
}

function formatOptionListItem(
  option: keyof SCSRAnimal['attributes'] | keyof SCSRAnimal['environment'],
  value: boolean,
  sex: SCSRAnimal['gender']
): PetUIContextOption {
  var listchild = {} as PetUIContextOption;
  switch (option) {
    case "spayed_neutered":
      if (value) {
        if (sex === "Male") {
          listchild.text = "Neutered: ";
        } else if (sex === "Female") {
          listchild.text = "Spayed: ";
        } else {
          listchild.text = "Spayed/Neutered: ";
        }
        listchild.icon = true;
        listchild.order = 2;
      }
      break;
    case "shots_current":
      if (value) {
        listchild.text = "Shots Current: ";
        listchild.icon = true;
        listchild.order = 3;
      }
      break;
    case "house_trained":
      if (value) {
        listchild.text = "Housetrained: ";
        listchild.icon = true;
        listchild.order = 4;
      }
      break;
    case "special_needs":
      if (value) {
        listchild.text = "Special Needs";
        listchild.order = 1;
      }
      break;
    case "children":
      if (value === false) {
        listchild.text = "No Kids";
        listchild.order = 5;
      }
      break;
    case "cats":
      if (value === false) {
        listchild.text = "No Cats";
        listchild.order = 6;
      }
      break;
    case "dogs":
      if (value === false) {
        listchild.text = "No Dogs";
        listchild.order = 7;
      }
      break;
  };
  return listchild;
}
---

<Layout
  title="Available Dogs"
  description="List of SC Sheltie Rescue dogs available for adoption."
>
  <div class="row">
    <div class="large-12 medium-12 small-12 columns">
      <main role="main" class="main-content">
        <h2 class="headline first">Available for Adoption</h2>
        <p>You can view our available dogs below or on our <a href="https://www.petfinder.com/pet-search?animal_type=&pet_breed=&pet_age=&pet_size=&specialNeeds=&declawedPets=&children=&status=&shelter_pet_id=&internal=&contact=&name=&shelter_id=SC92&sort=" target="_blank">Petfinder site</a>. If you are interested in adopting one of our rescue dogs, please complete and submit our <a href="https://docs.google.com/forms/d/e/1FAIpQLSeWT2ExXhpCpz-K5fELnkeUzhv5jFynlBzkv3eXl7bRnoFjVw/viewform" target="_blank">Adoption Application <Icon name="external-link" title="external link" size=10 class="inline align-text-top" /></a> form. If you have any questions feel free to <a href="mailto:adopt@scsheltierescue.com">email</a> us.</p>

        <div id="pets" class="clearfix">
          {
            (isGetAnimalsError) ?
              <div id="petfinder-api-error" data-alert class="alert-box alert">
                <p>
                  Oops, something went wrong! Please try again later or go directly to our <a href="http://www.petfinder.com/pet-search?shelterid=SC92">Petfinder site</a>.
                  <a href="#" class="close">&times;</a>
                </p>
              </div> :
              (context.pets && context.pets.length) ?
                context.pets.map((pet) => {
                  return (
                    <div class="pet-box clearfix panel">
                      <div class="clearfix pet-header">
                        <h2 class="pet-name"><span class="label">{pet.name}</span></h2>
                        <ul class="options">
                          {
                            pet.options.map((option) => (option.icon) ?
                              <li>
                                <span>{option.text} <Icon name="check-bold" title="bold check mark" size=24 class="inline" /></span>
                              </li> :
                              <li>
                                <strong>{option.text}</strong>
                              </li>
                            )
                          }
                        </ul>
                      </div>
                      <div class="clearfix pet-body">
                        <ul class="clearing-thumbs flex justify-center" data-clearing>
                          {
                            pet.photos.map((photo) =>
                              <li>
                                <a href={photo.src} class="th">
                                  <img src={photo.src} alt={photo.alt} />
                                </a>
                              </li>
                            )
                          }
                        </ul>
                        <div class="petfinder-link">
                          <a href={pet.petfinderUrl} target="_blank">{pet.name}'s Petfinder page <Icon name="external-link" title="external link" size=10 class="inline align-text-top" /></a>
                        </div>
                      </div>
                    </div>
                  )
                }) :
                <div class="alert-box" data-alert>
                  <p>There are currently no available dogs</p>
                </div>
          }
        </div>
        <!-- <div id="spinner" class="loading_spinner">
          <svg class="circular">
            <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"/>
          </svg>
        </div> -->

        <!-- <input id="btnMore" type="button" class="large button expand invisible" value="View More" /> -->
      </main>
    </div>
  </div>
</Layout>